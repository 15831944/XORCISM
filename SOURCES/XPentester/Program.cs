using System;
using System.Text;
using System.Collections.Generic;
using System.Linq;
//using System.Windows.Forms;
using System.IO;

using XORCISMModel;

namespace XPentester
{
    class Program
    {
        /// <summary>
        /// Copyright (C) 2012-2015 Jerome Athias
        /// Performs an automated pentest :-)
        /// All trademarks and registered trademarks are the property of their respective owners.
        /// This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
        /// 
        /// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
        /// 
        /// You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
        /// </summary>
        [STAThread]
        static void Main()
        {
            //*******************************************************
            //  WARNING: SORRY, theXploiter is not public...
            //*******************************************************
            
            XORCISMEntities model=new XORCISMEntities();
            int mySessionID=3555;   //TODO: TEST

            var thesession = from s in model.SESSION
                                  where s.SessionID == mySessionID
                                  select s;
            SESSION mysession=thesession.FirstOrDefault();
            int ServiceCategory = (int)mysession.ServiceCategoryID;
            Console.WriteLine("ServiceCategory=" + ServiceCategory);

            var myjobs = from j in model.JOB
                         where j.SessionID == mySessionID
                         select j;

            /*
            foreach (JOB job in myjobs.ToList())
            {
                Console.WriteLine("job=" + job.JobID);
                var myinfos = from i in model.INFORMATION
                              where i.JobID == job.JobID
                              select i;

                foreach (INFORMATION info in myinfos.ToList())
                {
                    Console.WriteLine(info.Title);

                }
            }
            */


            switch (ServiceCategory)
            {
                case 1:
                    {
                        //Vulnerability Assessment

                        break;
                    }
                case 2:
                    {
                        //Web Application Assessment

                        break;
                    }
                default:
                    {

                        break;
                    }
            }

            //Retrieve the known exploits for the VULNERABILITYFOUND

            //Analyze the gathered information

            //Launch the appropriate pentests for each ENDPOINT

        }
    }
}
