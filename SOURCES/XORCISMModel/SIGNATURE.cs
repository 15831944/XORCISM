//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XORCISMModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class SIGNATURE
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public SIGNATURE()
        {
            this.EVENTSIGNATURE = new HashSet<EVENTSIGNATURE>();
            this.SIGNATURECPE = new HashSet<SIGNATURECPE>();
            this.SIGNATUREEXPLOIT = new HashSet<SIGNATUREEXPLOIT>();
            this.SIGNATUREMALWAREINSTANCE = new HashSet<SIGNATUREMALWAREINSTANCE>();
            this.SIGNATUREREFERENCE = new HashSet<SIGNATUREREFERENCE>();
            this.TIMESHEETPERSON = new HashSet<TIMESHEETPERSON>();
            this.X509SIGNATURE = new HashSet<X509SIGNATURE>();
            this.PORT = new HashSet<PORT>();
            this.PROTOCOL = new HashSet<PROTOCOL>();
        }
    
        public int SignatureID { get; set; }
        public string SignatureName { get; set; }
        public string SignatureDescription { get; set; }
        public string SignatureBase64Binary { get; set; }
        public Nullable<int> SeverityLevelID { get; set; }
        public string SignatureSeverityLevel { get; set; }
        public Nullable<int> VocabularyID { get; set; }
        public Nullable<int> SignatureTypeID { get; set; }
        public Nullable<System.DateTimeOffset> CreatedDate { get; set; }
        public Nullable<System.DateTimeOffset> timestamp { get; set; }
        public Nullable<System.DateTimeOffset> ValidFromDate { get; set; }
        public Nullable<System.DateTimeOffset> ValidUntilDate { get; set; }
        public Nullable<bool> isEncrypted { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EVENTSIGNATURE> EVENTSIGNATURE { get; set; }
        public virtual SEVERITYLEVEL SEVERITYLEVEL { get; set; }
        public virtual SIGNATURETYPE SIGNATURETYPE { get; set; }
        public virtual VOCABULARY VOCABULARY { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SIGNATURECPE> SIGNATURECPE { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SIGNATUREEXPLOIT> SIGNATUREEXPLOIT { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SIGNATUREMALWAREINSTANCE> SIGNATUREMALWAREINSTANCE { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SIGNATUREREFERENCE> SIGNATUREREFERENCE { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TIMESHEETPERSON> TIMESHEETPERSON { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<X509SIGNATURE> X509SIGNATURE { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PORT> PORT { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PROTOCOL> PROTOCOL { get; set; }
    }
}
