//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XORCISMModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class PROCESSORTYPE
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public PROCESSORTYPE()
        {
            this.CODEPROCESSORTYPE = new HashSet<CODEPROCESSORTYPE>();
            this.PROCESSORTYPEMAPPING = new HashSet<PROCESSORTYPEMAPPING>();
            this.PROCESSORTYPEMAPPING1 = new HashSet<PROCESSORTYPEMAPPING>();
            this.REGISTER = new HashSet<REGISTER>();
        }
    
        public int ProcessorTypeID { get; set; }
        public string ProcessorTypeName { get; set; }
        public string ProcessorTypeDescription { get; set; }
        public Nullable<int> VocabularyID { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CODEPROCESSORTYPE> CODEPROCESSORTYPE { get; set; }
        public virtual VOCABULARY VOCABULARY { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PROCESSORTYPEMAPPING> PROCESSORTYPEMAPPING { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PROCESSORTYPEMAPPING> PROCESSORTYPEMAPPING1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<REGISTER> REGISTER { get; set; }
    }
}
